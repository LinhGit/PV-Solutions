# how to trigger this workflow:
# (on master branch) 
# git tag v0.0.1
# git push origin v0.0.1
# then: add release assets manually on GitHub
#       - data/example_data_1.zip
#       - data/example_data_2.zip
#       - extractor/segmentation/Mask_RCNN/logs/pv_modules20210521T1611/mask_rcnn_pv_modules_0120.h5

name: Create a new release and push Docker image to registry

on:
  push:
    tags: [ "v*" ]
  
jobs:
  tagged-release:
  
    if: github.event.base_ref == 'refs/heads/fix_actions' # TODO change back to master # only when tag is pushed on master branch
 
    runs-on: ubuntu-20.04
          
    steps:
      - name: Checkout
        uses: actions/checkout@v2
          
      # - name: Log in to the Container registry
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: lubo1994/pv-drone-inspect
          
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
          
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      
      # unsolved problem: files for upload must be
      # somehow uploaded to the workflow as they are not
      # included int the Github repository
      # possible solutions: download from Google Drive, upload manually
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: false
          draft: true
          #fail_on_unmatched_files: true
          #files: |
          #  data/example_data_1.zip
          #  data/example_data_2.zip
          #  extractor/segmentation/Mask_RCNN/logs/pv_modules20210521T1611/mask_rcnn_pv_modules_0120.h5
